WebClient - класс
 
Предоставляет общие методы обмена данными с ресурсом, заданным URI.
Пространство имен:   System.Net
Сборка:  System (в System.dll)

Иерархия наследования
System.Object
System.MarshalByRefObject
System.ComponentModel.Component
System.Net.WebClient

Синтаксис
[ComVisibleAttribute(true)]
public class WebClient : Component

Конструкторы
 WebClient()	Инициализирует новый экземпляр класса WebClient.

Свойства
 AllowReadStreamBuffering	Устарело.Получает или задает значение, которое указывает, будет ли выполняться буферизация данных, считываемых с интернет-ресурса для экземпляра WebClient.
 AllowWriteStreamBuffering	Устарело.Получает или задает значение, которое указывает, будет ли выполняться буферизация данных, записываемых в интернет-ресурс для экземпляра WebClient.
 BaseAddress	Возвращает или задает базовый URI для запросов, выполняемых экземпляром WebClient.
 CachePolicy	Возвращает или задает политику кэширования приложения для любых ресурсов, полученных этим экземпляром WebClient с помощью объектов WebRequest.
 CanRaiseEvents	Возвращает значение, показывающее, может ли компонент вызывать событие.(Наследуется от Component.)
 Container	Возвращает контейнер IContainer, содержащий компонент Component.(Наследуется от Component.)
 Credentials	Возвращает или задает учетные данные сети, которые передаются на узел и используются для проверки подлинности запроса.
 DesignMode	Возвращает значение, указывающее, находится ли данный компонент Component в режиме конструктора в настоящее время.(Наследуется от Component.)
 Encoding	Возвращает и задает Encoding, используемые для выгрузки и загрузки строк.
 Events	Возвращает список обработчиков событий, которые прикреплены к этому объекту Component.(Наследуется от Component.)
 Headers	Возвращает или задает коллекцию пар "имя-значение" заголовков, связанных с запросом.
 IsBusy	Возвращает значение, указывающее, выполняется ли веб-запрос.
 Proxy	Возвращает или задает прокси-сервер, используемый этим объектом WebClient.
 QueryString	Возвращает или задает коллекцию пар "имя-значение" запросов, связанных с запросом.
 ResponseHeaders	Возвращает коллекцию пар "имя-значение" заголовков, связанных с запросом.
 Site	Получает или задает экземпляр ISite для компонента Component.(Наследуется от Component.)
 UseDefaultCredentials	Возвращает или задает значение Boolean, которое управляет отправкой учетных данных DefaultCredentials вместе с запросами.

Методы
 CancelAsync()	Отменяет асинхронную операцию в очереди.
 CreateObjRef(Type)	Создает объект, который содержит всю необходимую информацию для создания прокси-сервера, используемого для взаимодействия с удаленным объектом.(Наследуется от MarshalByRefObject.)
 Dispose()	Освобождает все ресурсы, используемые объектом Component.(Наследуется от Component.)
 Dispose(Boolean)	Освобождает неуправляемые ресурсы, используемые объектом Component, а при необходимости освобождает также управляемые ресурсы.(Наследуется от Component.)
 DownloadData(String)	Загружает ресурс в виде массива Byte от указанного универсального кода ресурса (uri).
 DownloadData(Uri)	Загружает ресурс в виде массива Byte от указанного универсального кода ресурса (uri).
 DownloadDataAsync(Uri)	Загружает ресурс в виде массива Byte из универсального кода ресурса (uri), определен как асинхронная операция.
 DownloadDataAsync(Uri, Object)	Загружает ресурс в виде массива Byte из универсального кода ресурса (uri), определен как асинхронная операция.
 DownloadDataTaskAsync(String)	Загружает ресурс как массив Byte из URI, указанного как асинхронная операция с помощью объекта задачи.
 DownloadDataTaskAsync(Uri)	Загружает ресурс как массив Byte из URI, указанного как асинхронная операция с помощью объекта задачи.
 DownloadFile(String, String)	Загружает в локальный файл ресурс с указанным URI.
 DownloadFile(Uri, String)	Загружает в локальный файл ресурс с указанным URI.
 DownloadFileAsync(Uri, String)	Загружает в локальный файл ресурс с указанным URI.Этот метод не блокирует вызывающий поток.
 DownloadFileAsync(Uri, String, Object)	Загружает в локальный файл ресурс с указанным URI.Этот метод не блокирует вызывающий поток.
 DownloadFileTaskAsync(String, String)	Загружает указанный ресурс в локальный файл как асинхронная операция с помощью объекта задачи.
 DownloadFileTaskAsync(Uri, String)	Загружает указанный ресурс в локальный файл как асинхронная операция с помощью объекта задачи.
 DownloadString(String)	Загружает требуемый ресурс как строку String.Ресурс, который требуется загрузить, указан как строка String, содержащая URI.
 DownloadString(Uri)	Загружает требуемый ресурс как строку String.Загружаемый ресурс указан как Uri.
 DownloadStringAsync(Uri)	Загружает ресурс, указанный как Uri.Этот метод не блокирует вызывающий поток.
 DownloadStringAsync(Uri, Object)	Загружает указанную строку в указанный ресурс.Этот метод не блокирует вызывающий поток.
 DownloadStringTaskAsync(String)	Загружает ресурс как String из URI, указанного как асинхронная операция с помощью объекта задачи.
 DownloadStringTaskAsync(Uri)	Загружает ресурс как String из URI, указанного как асинхронная операция с помощью объекта задачи.
 Equals(Object)	Определяет, равен ли заданный объект текущему объекту.(Наследуется от Object.)
 Finalize()	Освобождает неуправляемые ресурсы и выполняет другие операции очистки, перед тем как объект Component будет удален при сборке мусора.(Наследуется от Component.)
 GetHashCode()	Играет роль хэш-функции для определённого типа.(Наследуется от Object.)
 GetLifetimeService()	Извлекает объект обслуживания во время существования, который управляет политикой времени существования данного экземпляра.(Наследуется от MarshalByRefObject.)
 GetService(Type)	Возвращает объект, представляющий службу, обеспечиваемую компонентом Component или его контейнером Container.(Наследуется от Component.)
 GetType()	Возвращает объект класса Type для текущего экземпляра. (Наследуется от Object.)
 GetWebRequest(Uri)	Возвращает объект WebRequest для заданного ресурса.
 GetWebResponse(WebRequest)	Возвращает объект WebResponse для заданного объекта WebRequest.
 GetWebResponse(WebRequest, IAsyncResult)	Возвращает ответ WebResponse для указанного запроса WebRequest, используя указанный IAsyncResult.
 InitializeLifetimeService()	Возвращает объект обслуживания во время существования для управления политикой времени существования данного экземпляра.(Наследуется от MarshalByRefObject.)
 MemberwiseClone()	Создает "поверхностную" копию текущего объекта. (Наследуется от Object.)
 MemberwiseClone(Boolean)	Создает неполную копию текущего объекта MarshalByRefObject.(Наследуется от MarshalByRefObject.)
 OnDownloadDataCompleted(DownloadDataCompletedEventArgs)	Создает событие DownloadDataCompleted.
 OnDownloadFileCompleted(AsyncCompletedEventArgs)	Создает событие DownloadFileCompleted.
 OnDownloadProgressChanged(DownloadProgressChangedEventArgs)	Создает событие DownloadProgressChanged.
 OnDownloadStringCompleted(DownloadStringCompletedEventArgs)	Создает событие DownloadStringCompleted.
 OnOpenReadCompleted(OpenReadCompletedEventArgs)	Создает событие OpenReadCompleted.
 OnOpenWriteCompleted(OpenWriteCompletedEventArgs)	Создает событие OpenWriteCompleted.
 OnUploadDataCompleted(UploadDataCompletedEventArgs)	Создает событие UploadDataCompleted.
 OnUploadFileCompleted(UploadFileCompletedEventArgs)	Создает событие UploadFileCompleted.
 OnUploadProgressChanged(UploadProgressChangedEventArgs)	Создает событие UploadProgressChanged.
 OnUploadStringCompleted(UploadStringCompletedEventArgs)	Создает событие UploadStringCompleted.
 OnUploadValuesCompleted(UploadValuesCompletedEventArgs)	Создает событие UploadValuesCompleted.
 OnWriteStreamClosed(WriteStreamClosedEventArgs)	Устарело.Создает событие WriteStreamClosed.
 OpenRead(String)	Открывает читаемый поток для данных, загруженных с ресурса, URI которого был указан как String.
 OpenRead(Uri)	Открывает читаемый поток для данных, загруженных с ресурса, URI которого был указан как Uri.
 OpenReadAsync(Uri)	Открывает поток, доступный для чтения и содержащий указанный ресурс.Этот метод не блокирует вызывающий поток.
 OpenReadAsync(Uri, Object)	Открывает поток, доступный для чтения и содержащий указанный ресурс.Этот метод не блокирует вызывающий поток.
 OpenReadTaskAsync(String)	Открывает считываемый поток, содержащий указанный ресурс как асинхронная операция с помощью объекта задачи.
 OpenReadTaskAsync(Uri)	Открывает считываемый поток, содержащий указанный ресурс как асинхронная операция с помощью объекта задачи.
 OpenWrite(String)	Открывает поток для записи данных в указанный ресурс.
 OpenWrite(String, String)	Открывает поток для записи данных в указанный ресурс с помощью указанного метода.
 OpenWrite(Uri)	Открывает поток для записи данных в указанный ресурс.
 OpenWrite(Uri, String)	Открывает поток для записи данных в указанный ресурс с помощью указанного метода.
 OpenWriteAsync(Uri)	Открывает поток для записи данных в указанный ресурс.Этот метод не блокирует вызывающий поток.
 OpenWriteAsync(Uri, String)	Открывает поток для записи данных в указанный ресурс.Этот метод не блокирует вызывающий поток.
 OpenWriteAsync(Uri, String, Object)	Открывает поток для записи данных в указанный ресурс с помощью указанного метода.Этот метод не блокирует вызывающий поток.
 OpenWriteTaskAsync(String)	Открывает поток для записи данных в указанный ресурс как асинхронная операция с помощью объекта задачи.
 OpenWriteTaskAsync(String, String)	Открывает поток для записи данных в указанный ресурс как асинхронная операция с помощью объекта задачи.
 OpenWriteTaskAsync(Uri)	Открывает поток для записи данных в указанный ресурс как асинхронная операция с помощью объекта задачи.
 OpenWriteTaskAsync(Uri, String)	Открывает поток для записи данных в указанный ресурс как асинхронная операция с помощью объекта задачи.
 ToString()	Возвращает строку String, содержащую имя компонента Component, если таковое имеется.Этот метод не следует переопределять.(Наследуется от Component.)
 UploadData(String, Byte[])	Передает буфер данных ресурсу, заданному с помощью URI.
 UploadData(String, String, Byte[])	Выгружает буфер данных на указанный ресурс с помощью указанного метода.
 UploadData(Uri, Byte[])	Передает буфер данных ресурсу, заданному с помощью URI.
 UploadData(Uri, String, Byte[])	Выгружает буфер данных на указанный ресурс с помощью указанного метода.
 UploadDataAsync(Uri, Byte[])	Выгружает буфер данных в ресурс, указанный с помощью URI, используя метод POST.Этот метод не блокирует вызывающий поток.
 UploadDataAsync(Uri, String, Byte[])	Выгружает буфер данных в ресурс, указанный с помощью URI, используя указанный метод.Этот метод не блокирует вызывающий поток.
 UploadDataAsync(Uri, String, Byte[], Object)	Передает буфер данных в ресурс, определенный с помощью URI, используя при этом указанный метод и маркер идентификации.
 UploadDataTaskAsync(String, Byte[])	Отправляет буфер данных, содержащий массив Byte на URI, указанного как асинхронная операция с помощью объекта задачи.
 UploadDataTaskAsync(String, String, Byte[])	Отправляет буфер данных, содержащий массив Byte на URI, указанного как асинхронная операция с помощью объекта задачи.
 UploadDataTaskAsync(Uri, Byte[])	Отправляет буфер данных, содержащий массив Byte на URI, указанного как асинхронная операция с помощью объекта задачи.
 UploadDataTaskAsync(Uri, String, Byte[])	Отправляет буфер данных, содержащий массив Byte на URI, указанного как асинхронная операция с помощью объекта задачи.
 UploadFile(String, String)	Передает заданный локальный файл ресурсу с заданным URI.
 UploadFile(String, String, String)	Выгружает указанный локальный файл на указанный ресурс с помощью указанного метода.
 UploadFile(Uri, String)	Передает заданный локальный файл ресурсу с заданным URI.
 UploadFile(Uri, String, String)	Выгружает указанный локальный файл на указанный ресурс с помощью указанного метода.
 UploadFileAsync(Uri, String)	Выгружает указанный локальный файл на указанный ресурс с помощью метода POST.Этот метод не блокирует вызывающий поток.
 UploadFileAsync(Uri, String, String)	Выгружает указанный локальный файл на указанный ресурс с помощью метода POST.Этот метод не блокирует вызывающий поток.
 UploadFileAsync(Uri, String, String, Object)	Выгружает указанный локальный файл на указанный ресурс с помощью метода POST.Этот метод не блокирует вызывающий поток.
 UploadFileTaskAsync(String, String)	Отправляет указанный локальный файл в ресурс как асинхронная операция с помощью объекта задачи.
 UploadFileTaskAsync(String, String, String)	Отправляет указанный локальный файл в ресурс как асинхронная операция с помощью объекта задачи.
 UploadFileTaskAsync(Uri, String)	Отправляет указанный локальный файл в ресурс как асинхронная операция с помощью объекта задачи.
 UploadFileTaskAsync(Uri, String, String)	Отправляет указанный локальный файл в ресурс как асинхронная операция с помощью объекта задачи.
 UploadString(String, String)	Выгружает указанную строку на указанный ресурс с помощью метода POST.
 UploadString(String, String, String)	Выгружает указанную строку на указанный ресурс с помощью указанного метода.
 UploadString(Uri, String)	Выгружает указанную строку на указанный ресурс с помощью метода POST.
 UploadString(Uri, String, String)	Выгружает указанную строку на указанный ресурс с помощью указанного метода.
 UploadStringAsync(Uri, String)	Выгружает указанную строку в указанный ресурс.Этот метод не блокирует вызывающий поток.
 UploadStringAsync(Uri, String, String)	Выгружает указанную строку в указанный ресурс.Этот метод не блокирует вызывающий поток.
 UploadStringAsync(Uri, String, String, Object)	Выгружает указанную строку в указанный ресурс.Этот метод не блокирует вызывающий поток.
 UploadStringTaskAsync(String, String)	Выгружает указанную строку в заданный ресурс как асинхронная операция с помощью объекта задачи.
 UploadStringTaskAsync(String, String, String)	Выгружает указанную строку в заданный ресурс как асинхронная операция с помощью объекта задачи.
 UploadStringTaskAsync(Uri, String)	Выгружает указанную строку в заданный ресурс как асинхронная операция с помощью объекта задачи.
 UploadStringTaskAsync(Uri, String, String)	Выгружает указанную строку в заданный ресурс как асинхронная операция с помощью объекта задачи.
 UploadValues(String, NameValueCollection)	Передает указанную коллекцию "имя-значение" указанному ресурсу, указанному с помощью URI.
 UploadValues(String, String, NameValueCollection)	Передает указанную коллекцию "имя-значение" указанному ресурсу, указанному с помощью URI, используя указанный метод.
 UploadValues(Uri, NameValueCollection)	Передает указанную коллекцию "имя-значение" указанному ресурсу, указанному с помощью URI.
 UploadValues(Uri, String, NameValueCollection)	Передает указанную коллекцию "имя-значение" указанному ресурсу, указанному с помощью URI, используя указанный метод.
 UploadValuesAsync(Uri, NameValueCollection)	Выгружает дату в указанной коллекции "имя-значение" в указанный ресурс, определенному с помощью URI.Этот метод не блокирует вызывающий поток.
 UploadValuesAsync(Uri, String, NameValueCollection)	Выгружает дату в указанной коллекции "имя-значение" в указанный ресурс, определенный с помощью URI, используя указанный метод.Этот метод не блокирует вызывающий поток.
 UploadValuesAsync(Uri, String, NameValueCollection, Object)	Выгружает дату в указанной коллекции "имя-значение" в указанный ресурс, определенный с помощью URI, используя указанный метод.Этот метод не блокирует вызывающий поток и позволяет вызывающей стороне передать объект в метод, вызванный после завершения операции.
 UploadValuesTaskAsync(String, NameValueCollection)	Выгружает указанную коллекцию "имя-значение" в указанный ресурс, определенный с помощью URI, как асинхронная операция с использованием объекта задачи.
 UploadValuesTaskAsync(String, String, NameValueCollection)	Выгружает указанную коллекцию "имя-значение" в указанный ресурс, определенный с помощью URI, как асинхронная операция с использованием объекта задачи.
 UploadValuesTaskAsync(Uri, NameValueCollection)	Выгружает указанную коллекцию "имя-значение" в указанный ресурс, определенный с помощью URI, как асинхронная операция с использованием объекта задачи.
 UploadValuesTaskAsync(Uri, String, NameValueCollection)	Выгружает указанную коллекцию "имя-значение" в указанный ресурс, определенный с помощью URI, как асинхронная операция с использованием объекта задачи.

События
 Disposed	Происходит при удалении компонента вызовом метода Dispose. (Наследуется от Component.)
 DownloadDataCompleted	Происходит после завершения асинхронной операции по загрузке данных.
 DownloadFileCompleted	Происходит после завершения асинхронной операции по загрузке файла.
 DownloadProgressChanged	Происходит при успешной передаче всех данных или их части посредством асинхронной операции загрузки.
 DownloadStringCompleted	Происходит после завершения асинхронной операции по загрузке ресурса.
 OpenReadCompleted	Происходит после завершения асинхронной операции по открытию строки, содержащей ресурс.
 OpenWriteCompleted	Происходит после завершения асинхронной операции по записи данных в ресурс.
 UploadDataCompleted	Происходит после завершения асинхронной операции по выгрузке данных.
 UploadFileCompleted	Происходит после завершения асинхронной операции по выгрузке файла.
 UploadProgressChanged	Происходит при успешной передаче всех данных или их части посредством асинхронной операции выгрузки.
 UploadStringCompleted	Происходит после завершения асинхронной операции по выгрузке строки.
 UploadValuesCompleted	Происходит после завершения асинхронной операции по выгрузке коллекции "имя-значение".
 WriteStreamClosed	Устарело.Происходит после закрытия асинхронной операции по записи данных в ресурс с использованием потока записи.

Заметки
Класс WebClient предоставляет общие методы обмена (приема и передачи) данными с любыми локальными ресурсами, ресурсами в сети Интернет и ресурсами в интрасети, указанными с помощью URI.
Класс WebClient использует класс WebRequest для обеспечения доступа к ресурсам.Экземпляры WebClient могут получить доступ к данным с любого потомка WebRequest зарегистрированного с помощью метода WebRequest.RegisterPrefix.

Примечание
По умолчанию платформа .NET Framework поддерживает URI, которые начинаются с идентификаторов схем http:, https:, ftp: и file:.
В следующей таблице описаны методы WebClient для выгрузки данных в ресурс.

			Метод					Описание
		OpenWrite		Получает поток Stream, который используется для отправки данных ресурсу.
		OpenWriteAsync		Получает поток Stream, используемый для передачи данных ресурсу без блокирования вызывающего потока.
		UploadData		Передает массив байтов ресурсу и возвращает массив Byte, содержащий любой ответ.
		UploadDataAsync		Передает массив Byte ресурсу без блокирования вызывающего потока.
		UploadFile		Передает локальный файл ресурсу и возвращает массив Byte, содержащий любой ответ.
		UploadFileAsync		Передает локальный файл ресурсу без блокирования вызывающего потока.
		UploadValues		Передает коллекцию NameValueCollection ресурсу и возвращает массив Byte, содержащий любой ответ.
		UploadValuesAsync	Передает ресурсу коллекцию NameValueCollection и возвращает массив Byte, содержащий любой ответ, без блокирования вызывающего потока.
		UploadString		Передает строку String ресурсу без блокирования вызывающего потока.
		UploadStringAsync	Передает строку String ресурсу без блокирования вызывающего потока.

В следующей таблице описаны методы WebClient для загрузки данных с ресурса.

			Метод					Описание
		OpenRead		Возвращает данные из ресурса в качестве потока Stream.
		OpenReadAsync		Возвращает данные из ресурса без блокирования вызывающего потока.
		DownloadData		Загружает данные из ресурса и возвращает массив Byte.
		DownloadDataAsync	Загружает данные из ресурса и возвращает массив Byte без блокирования вызывающего потока.
		DownloadFile		Загружает данные из ресурса в локальный файл.
		DownloadFileAsync	Загружает данные из ресурса в локальный файл без блокирования вызывающего потока.
		DownloadString		Загружает строку String из ресурса и возвращает строку String.
		DownloadStringAsync	Загружает строку String из ресурса без блокирования вызывающего потока.

Можно использовать метод CancelAsync для отмены асинхронных операций, которые не были завершены.
Экземпляр WebClient по умолчанию не отправляет необязательные HTTP-заголовки.Если для запроса необходим необязательный заголовок, следует добавить этот заголовок в коллекцию Headers.Например, чтобы сохранить запросы в ответе, необходимо добавить заголовок агента пользователя.Кроме того, некоторые серверы могут возвращать ошибку 500 (внутренняя ошибка сервера), если необязательный заголовок агента пользователя отсутствует.
Значение AllowAutoRedirect равно true в экземплярах WebClient.
Примечания для наследующих объектов:
Производные классы должны вызывать реализацию базового класса WebClient для обеспечения ожидаемого функционирования производного класса.

Примеры
В следующем примере кода используется URI ресурса для его получения, после чего отображается результат.
using System;
using System.Net;
using System.IO;

public class Test
{
    public static void Main (string[] args)
    {
        if (args == null || args.Length == 0)
        {
            throw new ApplicationException ("Specify the URI of the resource to retrieve.");
        }
        WebClient client = new WebClient ();

        // Add a user agent header in case the 
        // requested URI contains a query.

        client.Headers.Add ("user-agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR 1.0.3705;)");

        Stream data = client.OpenRead (args[0]);
        StreamReader reader = new StreamReader (data);
        string s = reader.ReadToEnd ();
        Console.WriteLine (s);
        data.Close ();
        reader.Close ();
    }
}