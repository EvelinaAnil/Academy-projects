NetworkStream - класс
 
Обеспечивает базовый поток данных для доступа к сети.

Пространство имен:   System.Net.Sockets
Сборка:  System (в System.dll)

Иерархия наследования
System.Object
System.MarshalByRefObject
System.IO.Stream
System.Net.Sockets.NetworkStream

Синтаксис
public class NetworkStream : Stream

Конструкторы
 NetworkStream(Socket)	Создает новый экземпляр класса NetworkStream для указанного объекта Socket.
 NetworkStream(Socket, Boolean)	Инициализирует новый экземпляр класса NetworkStream для указанного объекта Socket с заданным правом на владение Socket.
 NetworkStream(Socket, FileAccess)	Создает новый экземпляр класса NetworkStream для указанного объекта Socket с заданными правами на доступ.
 NetworkStream(Socket, FileAccess, Boolean)	Создает новый экземпляр класса NetworkStream для указанного объекта Socket с заданными правами доступа и указанными правами владения объектом Socket.

Свойства
 CanRead	Возвращает значение, указывающее, поддерживает ли объект NetworkStream чтение.(Переопределяет Stream.CanRead.)
 CanSeek	Получает значение, указывающее, поддерживает ли поток поиск.Это свойство в настоящее время не поддерживается и всегда возвращает значение false.(Переопределяет Stream.CanSeek.)
 CanTimeout	Указывает, применимы ли для объекта NetworkStream свойства тайм-аута.(Переопределяет Stream.CanTimeout.)
 CanWrite	Получает значение, указывающее, поддерживает ли объект NetworkStream запись.(Переопределяет Stream.CanWrite.)
 DataAvailable	Возвращает значение, указывающее, имеются ли в объекте NetworkStream данные, доступные для чтения.
 Length	Получает длину данных, доступных в потоке.Это свойство в настоящее время не поддерживается, и обращение к нему всегда создает исключение NotSupportedException.(Переопределяет Stream.Length.)
 Position	Возвращает или задает текущую позицию в потоке.Это свойство в настоящее время не поддерживается, и обращение к нему всегда создает исключение NotSupportedException.(Переопределяет Stream.Position.)
 Readable	Получает или устанавливает значение, указывающее, может ли выполняться чтение из объекта NetworkStream.
 ReadTimeout	Возвращает или задает время, в течение которого операция чтения блокирует ожидание данных. (Переопределяет Stream.ReadTimeout.)
 Socket	Получает соответствующий объект Socket.
 Writeable	Получает значение, указывающее, предусмотрена ли запись в объект NetworkStream.
 WriteTimeout	Возвращает или задает время, в течение которого операция записи блокирует ожидание данных. (Переопределяет Stream.WriteTimeout.)

Методы
 BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)	Начинает асинхронное чтение из объекта NetworkStream.(Переопределяет Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object).)
 BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)	Начинает асинхронную запись в поток.(Переопределяет Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object).)
 Close()	Закрывает текущий поток и отключает все ресурсы (например, сокеты и файловые дескрипторы), связанные с текущим потоком.Вместо вызова данного метода, убедитесь в том, что поток надлежащим образом ликвидирован.(Наследуется от Stream.)
 Close(Int32)	Закрывает объект NetworkStream после ожидания в течение указанного времени, позволяя выполнить отправку данных.
 CopyTo(Stream)	Считывает байты из текущего потока и записывает их в другой поток.(Наследуется от Stream.)
 CopyTo(Stream, Int32)	Считывает байты из текущего потока и записывает их в другой поток, используя указанный размер буфера.(Наследуется от Stream.)
 CopyToAsync(Stream)	Асинхронно считывает байты из текущего потока и записывает их в другой поток.(Наследуется от Stream.)
 CopyToAsync(Stream, Int32)	Асинхронно считывает байты из текущего потока и записывает их в другой поток, используя указанный размер буфера.(Наследуется от Stream.)
 CopyToAsync(Stream, Int32, CancellationToken)	Асинхронно считывает байты из текущего потока и записывает их в другой поток, используя указанный размер буфера и токен отмены.(Наследуется от Stream.)
 CreateObjRef(Type)	Создает объект, который содержит всю необходимую информацию для создания прокси-сервера, используемого для взаимодействия с удаленным объектом.(Наследуется от MarshalByRefObject.)
 CreateWaitHandle()	Устарело.Выделяет объект WaitHandle.(Наследуется от Stream.)
 Dispose()	Освобождает все ресурсы, занятые модулем Stream.(Наследуется от Stream.)
 Dispose(Boolean)	Освобождает неуправляемые ресурсы, используемые объектом NetworkStream, а при необходимости освобождает также управляемые ресурсы.(Переопределяет Stream.Dispose(Boolean).)
 EndRead(IAsyncResult)	Обрабатывает завершение асинхронного чтения.(Переопределяет Stream.EndRead(IAsyncResult).)
 EndWrite(IAsyncResult)	Обрабатывает завершение асинхронной записи.(Переопределяет Stream.EndWrite(IAsyncResult).)
 Equals(Object)	Определяет, равен ли заданный объект текущему объекту.(Наследуется от Object.)
 Finalize()	Освобождает все ресурсы, используемые объектом NetworkStream.(Переопределяет Object.Finalize().)
 Flush()	Удаляет данные из потока.Этот метод зарезервирован для использования в будущем.(Переопределяет Stream.Flush().)
 FlushAsync()	Асинхронно очищает все буферы для этого потока и вызывает запись всех буферизованных данных в базовое устройство.(Наследуется от Stream.)
 FlushAsync(CancellationToken)	Удаляет данные из потока в качестве асинхронной операции.(Переопределяет Stream.FlushAsync(CancellationToken).)
 GetHashCode()	Играет роль хэш-функции для определённого типа.(Наследуется от Object.)
 GetLifetimeService()	Извлекает объект обслуживания во время существования, который управляет политикой времени существования данного экземпляра.(Наследуется от MarshalByRefObject.)
 GetType()	Возвращает объект класса Type для текущего экземпляра. (Наследуется от Object.)
 InitializeLifetimeService()	Возвращает объект обслуживания во время существования для управления политикой времени существования данного экземпляра.(Наследуется от MarshalByRefObject.)
 MemberwiseClone()	Создает "поверхностную" копию текущего объекта. (Наследуется от Object.)
 MemberwiseClone(Boolean)	Создает неполную копию текущего объекта MarshalByRefObject.(Наследуется от MarshalByRefObject.)
 ObjectInvariant()	Устарело. Этот API служит для поддержки инфраструктуры продукт и не предназначен для непосредственного использования из кода. Обеспечивает поддержку для Contract.(Наследуется от Stream.)
 Read(Byte[], Int32, Int32)	Читает данные из объекта NetworkStream.(Переопределяет Stream.Read(Byte[], Int32, Int32).)
 ReadAsync(Byte[], Int32, Int32)	Асинхронно считывает последовательность байтов из текущего потока и перемещает позицию внутри потока на число считанных байтов.(Наследуется от Stream.)
 ReadAsync(Byte[], Int32, Int32, CancellationToken)	Асинхронно считывает последовательность байтов из текущего потока, перемещает позицию в потоке на число считанных байтов и отслеживает запросы отмены.(Наследуется от Stream.)
 ReadByte()	Считывает байт из потока и перемещает позицию в потоке на один байт или возвращает -1, если достигнут конец потока.(Наследуется от Stream.)
 Seek(Int64, SeekOrigin)	Устанавливает заданное значение для текущей позиции потока.Этот метод в настоящее время не поддерживается, и он всегда создает исключение NotSupportedException.(Переопределяет Stream.Seek(Int64, SeekOrigin).)
 SetLength(Int64)	Устанавливает длину потока.Этот метод всегда создает исключение NotSupportedException.(Переопределяет Stream.SetLength(Int64).)
 ToString()	Возвращает строковое представление текущего объекта.(Наследуется от Object.)
 Write(Byte[], Int32, Int32)	Записывает данные в объект NetworkStream.(Переопределяет Stream.Write(Byte[], Int32, Int32).)
 WriteAsync(Byte[], Int32, Int32)	Асинхронно записывает последовательность байтов в текущий поток и перемещает текущую позицию внутри потока на число записанных байтов.(Наследуется от Stream.)
 WriteAsync(Byte[], Int32, Int32, CancellationToken)	Асинхронно записывает последовательность байтов в текущий поток, перемещает текущую позицию внутри потока на число записанных байтов и отслеживает запросы отмены.(Наследуется от Stream.)
 WriteByte(Byte)	Записывает байт в текущее положение в потоке и перемещает позицию в потоке вперед на один байт.(Наследуется от Stream.)

Заметки
Класс NetworkStream обеспечивает методы для передачи и приема данных через сокеты Stream в блокирующем режиме.Дополнительные сведения о сравнении блокирующих и неблокирующих классах Socket см. в разделе Использование асинхронное сокет клиента.Можно использовать класс NetworkStream для выполнения как синхронной, так и асинхронной передачи данных.Дополнительные сведения о синхронной и асинхронной связи см. в разделе ????.
Чтобы создать объект NetworkStream, необходимо предоставить подключенный объект Socket.Можно также указать, какие разрешения FileAccess имеет объект NetworkStream на предоставленном объекте Socket.По умолчанию закрытие объекта NetworkStream не приводит к закрытию предоставленного объекта Socket.Если требуется, чтобы объект NetworkStream имел разрешение на закрытие предоставленного объекта Socket, необходимо указать значение true для параметра ownsSocket.
Используйте методы Write и Read для синхронного блокирования ввода-вывода простого одиночного потока.Если необходимо обрабатывать операции ввода-вывода с использованием отдельных потоков, рекомендуется использовать для связи методы BeginWrite и EndWrite или методы BeginRead и EndRead.
Объект NetworkStream не поддерживает произвольный доступ к сетевому потоку данных.Значение свойства CanSeek, которое указывает, поддерживается ли потоком поиск, всегда равно false; чтение свойства Position или свойства Length, а также вызов метода Seek всегда приводит к созданию исключения NotSupportedException.
Операции чтения и записи могут выполняться одновременно над экземпляром класса NetworkStream без необходимости синхронизации.Пока существует один уникальный поток для операций записи и один уникальный поток для операций чтения, между потоками чтения и записи не будет перекрестных конфликтов, и синхронизация не потребуется.