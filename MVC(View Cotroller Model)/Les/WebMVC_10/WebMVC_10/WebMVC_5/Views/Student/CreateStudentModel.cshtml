@using WebMVC_5.Models
@model WebMVC_5.Models.ViewModels.StudentModel

@{
    ViewBag.Title = "CreateStudentModel";
}

<h2>Новий студент</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @if (ViewBag.ErrorMessage != null)
        {
            <h3 style="color:red">@ViewBag.ErrorMessage</h3>
        }

        <hr />

        @Html.ValidationSummary(true, "Помилка", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Grant, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Grant, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grant, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberConfirm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberConfirm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberConfirm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Series, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Series, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Series, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GroupName", ViewBag.Groups as IEnumerable<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.DropDownListFor(model => model.GroupName, ViewBag.Groups as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Предмети", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (Subject item in ViewBag.Subjects)
                {
                    if (Model != null)
                    {
                        <input type="checkbox" name="subjects" value="@item.Id"
                               @(Model.Subjects.Contains(item) ? "checked=\"checked\"" : "") />
                    }
                    else
                    {
                        <input type="checkbox" name="subjects" value="@item.Id" />
                    }
                    <span>&nbsp;@item.SubjName</span>
                    <br />
                }
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="uploadFile" type="file" name="upload" />
                <br />
                <input class="btn btn-success" id="submit" type="submit" value="Записати" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhotoFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PhotoFile, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Створити" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Повернутися до переліку", "Index")
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $('#submit').on('click', function (e) {
            e.preventDefault();
            let files = document.getElementById('uploadFile').files;
            if (files.length > 0) {
                if (window.FormData != undefined) {
                    let data = new FormData();
                    for (let i = 0; i < files.length; i++) {
                        data.append('file' + i, files[i]);
                    }

                    $.ajax(
                        {
                            type: 'post',
                            url: `/Student/AddStudentPhoto/${$('#GroupName').val()}/${$('#LastName').val()}/${$('#FirstName').val()}`,
                            contentType: false,
                            processData: false,
                            data: data,
                            success: function (result) {
                                alert(result);

                                $('#PhotoFile').val(`${$('#GroupName').val()}/${$('#LastName').val()}_${$('#FirstName').val()}.jpg`);
                            },
                            error: function (x) {
                                alert(x.responseText);
                            }
                        })
                }
                else {
                    alert('Браузер не підтримує HTML5!');
                }
            }
            else {
                alert('Треба вибрати файл!');
            }
        })
    </script>
}
